name: exercise_trial.yaml

on:
  issue_comment:
    types: [created]

jobs:
  compare:
    if: |
      contains(github.event.comment.body, '/wandb ') &&
      github.event.issue.pull_request != null
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wandb

      - name: Get Run ID
        run: |
          run_id=$(echo "${{ github.event.comment.body }}" | sed -n -e 's/^.*\/wandb //p')
          echo "::set-env name=RUN_ID::${run_id}"
        shell: bash

      - name: Get Baseline Run
        id: get_baseline_run
        uses: actions/github-script@v4
        with:
          script: |
            const wandb = require('wandb');
            const api = wandb.Api();
            const [entity, project] = '${{ secrets.WANDB_ENTITY }}/${{ secrets.WANDB_PROJECT }}'.split('/');
            const runs = await api.runs(`${entity}/${project}`, {'tags': 'baseline'});
            if (runs.length === 0) {
              throw new Error('No baseline run found');
            }
            console.log(`::set-output name=baseline_run_id::${runs[0].id}`);

      - name: Generate WandB Report
        if: steps.get_baseline_run.outputs.baseline_run_id != '' && env.RUN_ID != ''
        id: generate_report
        run: |
          wandb login ${{ secrets.WANDB_API_KEY }}
          wandb report generate --type wandb --baseline "${{ steps.get_baseline_run.outputs.baseline_run_id }}" "${{ env.RUN_ID }}"
          echo "::set-output name=report_url::$(wandb report url --type wandb --baseline "${{ steps.get_baseline_run.outputs.baseline_run_id }}" "${{ env.RUN_ID }}")"

      - name: Comment on Issue
        if: steps.generate_report.outputs.report_url != ''
        uses: actions/github-script@v4
        with:
          script: |
            const comment = `A comparison between the linked run and baseline is available [in this report](${steps.generate_report.outputs.report_url}).`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })
      env:
        WANDB_ENTITY: my_wandb_entity
        WANDB_PROJECT: my_wandb_project
        WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
